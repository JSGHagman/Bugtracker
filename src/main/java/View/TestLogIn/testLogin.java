package View.TestLogIn;

import Controller.Controller;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class testLogin extends JDialog implements ActionListener {
    private JPanel mainPanel;
    private JPanel signIn;
    private JPanel signUp;
    private JTextField firstNameTextField;
    private JTextField eMailSignIn;
    private JPasswordField passwordSignIn;
    private JTextField lastNameTextField;
    private JTextField eMailSignUp;
    private JPasswordField passwordSignUp;
    private JComboBox RoleBox;
    private JButton signInButton;
    private JButton signUpButton;
    private Controller controller;


    /**
     * @param controller Instantiate the form
     */
    public testLogin(Controller controller) {
        this.controller = controller;

        JFrame frame = new JFrame("Bugtracker Register/login");
        frame.setContentPane(mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);


        frame.pack();
        frame.setVisible(true);

    }


    public void addActionListerner(JButton btn) {
        btn.addActionListener(this);
    }


    /**
     * Invoked when an action occurs.
     *
     * @param e the event to be processed
     */
    @Override
    public void actionPerformed(ActionEvent e) {

        if (e.getSource().equals(signUpButton)) {
            controller.onSignUpBtnClick();
        }
        if (e.getSource() == signInButton) {
            controller.onSignInBtnClick();

        }
    }

    //getters for controller-class to get values later
    public JTextField getFirstName() {
        return firstNameTextField;
    }

    public JTextField getLastName() {
        return lastNameTextField;
    }

    public JComboBox getRoleBox() {
        return RoleBox;
    }

    public JButton getSignInButton() {
        return signInButton;
    }

    public JButton getSignUpButton() {
        return signUpButton;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public JTextField geteMailSignIn() {
        return eMailSignIn;
    }

    public JTextField geteMailSignUp() {
        return eMailSignUp;
    }

    public JPasswordField getPasswordSignIn() {
        return passwordSignIn;
    }

    public JPasswordField getPasswordSignUp() {
        return passwordSignUp;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(2, 5, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.setBackground(new Color(-1));
        mainPanel.setForeground(new Color(-1));
        signIn = new JPanel();
        signIn.setLayout(new GridLayoutManager(5, 3, new Insets(0, 0, 0, 0), -1, -1));
        signIn.setBackground(new Color(-16170323));
        mainPanel.add(signIn, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        eMailSignIn = new JTextField();
        Font eMailSignInFont = this.$$$getFont$$$("Arial", -1, -1, eMailSignIn.getFont());
        if (eMailSignInFont != null) eMailSignIn.setFont(eMailSignInFont);
        eMailSignIn.setText("E-mail");
        signIn.add(eMailSignIn, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordSignIn = new JPasswordField();
        Font passwordSignInFont = this.$$$getFont$$$("Arial", -1, -1, passwordSignIn.getFont());
        if (passwordSignInFont != null) passwordSignIn.setFont(passwordSignInFont);
        passwordSignIn.setText("Password");
        signIn.add(passwordSignIn, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        signInButton = new JButton();
        Font signInButtonFont = this.$$$getFont$$$("Arial", -1, -1, signInButton.getFont());
        if (signInButtonFont != null) signInButton.setFont(signInButtonFont);
        signInButton.setText("Sign In");
        signIn.add(signInButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        signIn.add(spacer1, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        signIn.add(spacer2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        signIn.add(spacer3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        signIn.add(spacer4, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        signUp = new JPanel();
        signUp.setLayout(new GridLayoutManager(7, 2, new Insets(0, 0, 0, 0), -1, -1));
        signUp.setBackground(new Color(-1));
        mainPanel.add(signUp, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstNameTextField = new JTextField();
        Font firstNameTextFieldFont = this.$$$getFont$$$("Arial", -1, -1, firstNameTextField.getFont());
        if (firstNameTextFieldFont != null) firstNameTextField.setFont(firstNameTextFieldFont);
        firstNameTextField.setText("First name");
        signUp.add(firstNameTextField, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lastNameTextField = new JTextField();
        Font lastNameTextFieldFont = this.$$$getFont$$$("Arial", -1, -1, lastNameTextField.getFont());
        if (lastNameTextFieldFont != null) lastNameTextField.setFont(lastNameTextFieldFont);
        lastNameTextField.setText("Last name");
        signUp.add(lastNameTextField, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        eMailSignUp = new JTextField();
        Font eMailSignUpFont = this.$$$getFont$$$("Arial", -1, -1, eMailSignUp.getFont());
        if (eMailSignUpFont != null) eMailSignUp.setFont(eMailSignUpFont);
        eMailSignUp.setText("E-mail");
        signUp.add(eMailSignUp, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordSignUp = new JPasswordField();
        Font passwordSignUpFont = this.$$$getFont$$$("Arial", -1, -1, passwordSignUp.getFont());
        if (passwordSignUpFont != null) passwordSignUp.setFont(passwordSignUpFont);
        passwordSignUp.setText("Password");
        signUp.add(passwordSignUp, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        RoleBox = new JComboBox();
        Font RoleBoxFont = this.$$$getFont$$$("Arial", -1, -1, RoleBox.getFont());
        if (RoleBoxFont != null) RoleBox.setFont(RoleBoxFont);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("User");
        defaultComboBoxModel1.addElement("Admin");
        defaultComboBoxModel1.addElement("Agent");
        RoleBox.setModel(defaultComboBoxModel1);
        signUp.add(RoleBox, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        signUpButton = new JButton();
        Font signUpButtonFont = this.$$$getFont$$$("Arial", -1, -1, signUpButton.getFont());
        if (signUpButtonFont != null) signUpButton.setFont(signUpButtonFont);
        signUpButton.setText("Sign Up");
        signUp.add(signUpButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setBackground(new Color(-16170323));
        Font label1Font = this.$$$getFont$$$("Arial", Font.BOLD | Font.ITALIC, -1, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setForeground(new Color(-16170323));
        label1.setText("Create a New User");
        signUp.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        signUp.add(spacer5, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setIcon(new ImageIcon(getClass().getResource("/BugTrckerLogo.png")));
        label2.setText("");
        mainPanel.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        mainPanel.add(spacer6, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        mainPanel.add(spacer7, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer8 = new Spacer();
        mainPanel.add(spacer8, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
